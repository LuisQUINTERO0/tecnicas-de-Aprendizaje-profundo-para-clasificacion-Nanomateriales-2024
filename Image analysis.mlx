% This code is licensed under the GPL and is designed to organize and manage images in a directory. Its main purpose 
is to work with images of nanomaterials classified into three categories. The code resizes each image to a scale of 224x224 pixels, 
maintaining its format in JPG, although this can be modified to any other format of preference.
In addition, the program organizes the images by creating folders in the corresponding directory and stores the images of each category in a specific folder. 
specific folder.
Each image is labeled with the name of its class and a sequential numbering, which facilitates its use in other processing and reading tasks, ensuring that the images are 
ensuring that the images are properly sorted. It also includes a functionality to convert the images to grayscale, making the necessary adjustments to the images.
to grayscale, making the necessary adjustments to the original image.

*Specific route*
%Specifies the main folder where the subfolders with images are located.
main_folder = 'C:\Users\Desktop\NMs';

% Getting all subfolders inside the main folder.
subfolders = dir(main_folder);
subfolders = subfolders([subfolders.isdir]);  % Filter only folders.

% Counter to number the images.
counter_images = 1;

% Scrolls each subfolder
for i = 1:numel(subfolders)
    name_subfolder = subfolders(i).name;
    if ~strcmp(name_subfolder, '.') && ~strcmp(name_subfolder, '..')

% Reads all images inside the current subfolder.
        current_folder = fullfile(main_folder, name_subfolder);
        image_files = dir(fullfile(current_folder, '*.jpg'));  % Change format according to your images.

% Creates a folder to store the resized images.
        destination_folder = fullfile(main_folder,'resized_images',name_subfolder);
        if ~exist(destination_folder, 'dir')
            mkdir(destination_folder);
        end

% Iterate over each image file.
        for j = 1:numel(image_files)
            image_name = image_files(j).name;
            image_path = fullfile(current_folder, image_name);

*Pre-preparedness on images*

% Read the image.
            image = imread(image_path);
% Define the dimensions of the images.
            new_height = 224;
            new_width = 224;
            resized_image = imresize(image, [new_height, new_width]);
            counter_images = counter_images + 1;
            
*Saving of images*

            % Saves images individually according to their folder name.
            [~, base_name, ~] = fileparts(image_name);  % Extracts the base name without extension.
            file_name = [subfolder_name '_' base_name '.jpg'];  
            % File name with label, extension can be changed if desired.

            % Save the resized image inside the destination folder.
            saved_route = fullfile(destination_folder, file_name);
            imwrite(resized_image, saved_route);
        end
    end
end
disp('Finshed.');
